// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Schedule {
  @@map("schedules")
  @@index([accountId, agentId])
  @@index([accountId])
  @@index([agentId])
  @@index([startTime, endTime])

  id         String   @map("id") @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  accountId  Int      @map("account_id")
  agentId    String   @map("agent_id")
  startTime  DateTime @map("start_time")
  endTime    DateTime @map("end_time")
  tasks      Task[]
  createdAt  DateTime @map("created_at") @default(now())
  updatedAt  DateTime @map("updated_at") @updatedAt
}

model Task {
  @@map("tasks")
  @@index([accountId, scheduleId])
  @@index([accountId])
  @@index([type])
  @@index([startTime, duration])

  id         String   @map("id") @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  accountId  Int      @map("account_id")
  scheduleId String   @map("schedule_id") @db.Uuid
  schedule   Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  startTime  DateTime @map("start_time")
  duration   Int      @map("duration")
  type       TaskType @map("type")
  createdAt  DateTime @map("created_at") @default(now())
  updatedAt  DateTime @map("updated_at") @updatedAt
}

enum TaskType {
  BREAK @map("break")
  WORK  @map("work")
}